///
/// HybridMMKVPlatformContextSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridMMKVPlatformContextSpec``
public protocol HybridMMKVPlatformContextSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func getBaseDirectory() throws -> String
  func getAppGroupDirectory() throws -> String?
}

/// See ``HybridMMKVPlatformContextSpec``
open class HybridMMKVPlatformContextSpec_base {
  private weak var cxxWrapper: HybridMMKVPlatformContextSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridMMKVPlatformContextSpec_cxx {
  #if DEBUG
    guard self is HybridMMKVPlatformContextSpec else {
      fatalError("`self` is not a `HybridMMKVPlatformContextSpec`! Did you accidentally inherit from `HybridMMKVPlatformContextSpec_base` instead of `HybridMMKVPlatformContextSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridMMKVPlatformContextSpec_cxx(self as! HybridMMKVPlatformContextSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the MMKVPlatformContext HybridObject.
 * Implement this protocol to create Swift-based instances of MMKVPlatformContext.
 * ```swift
 * class HybridMMKVPlatformContext : HybridMMKVPlatformContextSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridMMKVPlatformContextSpec = HybridMMKVPlatformContextSpec_protocol & HybridMMKVPlatformContextSpec_base
